EX01: 
	Construtor de cópia: Responsável por criar um novo objeto a partir de outro objeto já existente, realizando uma cópia profunda de seus recursos.

	Operador de atribuição: Sobrecarrega o operador de atribuição (=) para permitir que um objeto seja atribuído a outro objeto, garantindo a correta cópia dos recursos.

	Construtor padrão: Cria um objeto vazio, geralmente inicializando os recursos com valores padrão ou nulos.

	Destrutor: Libera os recursos alocados pela classe antes de destruí-la, garantindo a correta limpeza dos recursos.
	
é uma prática importante para garantir o correto gerenciamento de recursos e a consistência do comportamento de uma classe ao realizar operações de cópia, atribuição e destruição.

Construtor de Cópia:

	Ao criar um novo objeto a partir de um objeto já existente.
	Quando deseja-se fazer uma cópia profunda dos recursos do objeto.
	Em situações onde a cópia é necessária no momento da criação do objeto, como em passagem de objetos por valor ou retorno de objetos por valor.
	
	Operador de Atribuição:

Quando deseja-se atribuir o valor de um objeto a outro objeto já existente.
Para realizar a cópia de recursos de um objeto para outro depois de sua criação.


EX02:

sobrecarga do operador de inserção permite que o objeto FIXED da classe FIXED seja inserido no fluxo de saída std::cout e impresso como parte de uma frase.

std::ostream&: O tipo de retorno do operador de inserção é uma referência a std::ostream, que é a classe base para fluxos de saída, como std::cout e std::ofstream

o: O primeiro parâmetro é uma referência a std::ostream, que representa o fluxo de saída onde o objeto Integer será inserido.

Fixed const &fixed: O segundo parâmetro é uma referência constante a um objeto Fixed que será inserido no fluxo de saída.

Integer (fixed) é extraído usando o método toFloat() e, em seguida, é inserido no fluxo de saída o usando a sintaxe o << Fixed.toFloat(). Por fim, o próprio fluxo de saída o é retornado para permitir encadeamento adicional de operadores.


EX03:
A sobrecarga do operador permite definir ou alterar o comportamento de um operador em seu programa. Os operadores são essencialmente apenas funções

Operadores aritméticos
Operadores de atribuição
Operadores de comparação
Operadores lógicos
Operadores bit a bit

Polimorfismo ad-hoc/sobrecarga de função

A sobrecarga de função é um princípio C++, que permite definir várias funções com o mesmo nome, mas aceitando parâmetros diferentes


INCREMENTO 
Com ++i, o incremento ocorre antes do valor ser usado ou retornado, enquanto com i++, o incremento ocorre após o valor ser retornado.

EXTRA:
A notação ++i é chamada de pré-incremento (pre-increment). Nessa forma, o valor de i é incrementado antes de qualquer outra operação ser executada. Após o incremento, o valor atualizado de i é retornado.

int i = 5;
int result = ++i;

pós a execução dessas linhas de código, tanto i quanto result terão o valor de 6, porque o valor de i é incrementado antes de ser atribuído a result.

Por outro lado, a notação i++ é chamada de pós-incremento (post-increment). Nessa forma, o valor de i é incrementado, mas o valor original de i é retornado antes do incremento.
 int i = 5;
int result = i++;

Após a execução dessas linhas de código, i terá o valor de 6, mas result terá o valor original de i (5) antes do incremento.




///////////////////////


eu uso 1 bits
